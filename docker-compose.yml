version: '2.1'
services:
  deliverize_db:
    image: mysql
    container_name: deliverize_db
    #restart: always 
    environment:
        DB_SERVER_PORT: 3306
        MYSQL_ROOT_PASSWORD: root
        MYSQL_HOST: 'docker-mysql'
        MYSQL_USER: 'user'
        MYSQL_DB: 'deliverize'
    healthcheck:
      test: ["CMD-SHELL", 'mysqladmin ping'] 
      interval: 10s
      timeout: 2s
      retries: 3
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      - '3307'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - i_hate_this
  
  #db_init:
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   container_name: 'init_db'
  #   build: ./db_initializer/.
  #   command: python3 -u /usr/initialize_db.py
 
  
  #mvn_app:
  #  build:
  #    context: ./api
  #    args:
  #      LOCAL_ENV: true
  #  volumes:
  #    - ./target/api.war:/usr/local/tomcat/webapps/api.war

  deliverize_app:
    container_name: deliverizebackend
    image: maven-app:latest
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    depends_on:
      deliverize_db:
        condition: service_healthy

    command: ["./mvnw","spring-boot:run"]
    environment:
      - spring.datasource.url=jdbc:mysql://deliverize_db:3306/mysql
      - spring.datasource.username=root
      - spring.datasource.password=root
     # - spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.jpa.hibernate.ddl-auto=update
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      
    networks:
      - i_hate_this
volumes:
  dbdata:
    driver: local
networks:
  i_hate_this:
    driver: bridge
